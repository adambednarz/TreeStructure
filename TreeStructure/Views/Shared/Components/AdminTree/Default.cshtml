@model AdminTreeViewComponentModel

@foreach (var dir in Model.DirModel)
{
    <form style="display:inline-block">
        <div class="list-group-item">
            <button class="btn " type="button" data-toggle="collapse" data-target="#DIR_@dir.Id">
                <i class="fas fa-angle-down fas-title"></i>@dir.Name
            </button>
            <div class="btn-group">
                <button type="button" class="btn btn-light btn-sm" data-toggle="collapse" data-target="#ADD_@dir.Id">
                    <i class="fas fa-plus "></i>
                </button>
                <button type="button" class="btn btn-primary btn-sm" data-toggle="collapse" data-target="#EDIT_@dir.Id">
                    <i class="fas fa-edit"></i>
                </button>
                <button type="button" class="btn btn-danger btn-sm" data-toggle="collapse" data-target="#REM_@dir.Id">
                    <i class="fas fa-trash"></i>
                </button>
            </div>
        </div>
    </form>
    <div class="collapse card card-body" , id="ADD_@dir.Id">
        @await Component.InvokeAsync("AddNewItem", new { parentId = dir.Id })
    </div>
    <div class="collapse card card-body" , id="EDIT_@dir.Id">
        @await Component.InvokeAsync("EditItem", new { id = dir.Id, parentId = dir.ParentId, name = dir.Name})
    </div>
    <div class="collapse card card-body" , id="REM_@dir.Id">
        @await Component.InvokeAsync("RemoveItem", new { id = dir.Id })
    </div>


    if (dir.DirectoryChildren != null)
    {
        <div class="collapse" id="DIR_@dir.Id">
            <div class="card card-body">
                @await Component.InvokeAsync("AdminTree", new { directories = dir.DirectoryChildren, isFirstCall = false })
            </div>
        </div>
    }
}
